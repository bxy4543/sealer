name: Sealer-Test-Image

on:
  push:
    branches: "e2e*"
  pull_request:
    types: [ opened, synchronize, reopened, labeled ]

jobs:
  build:
    name: image-test
    if: ${{ contains(github.event.pull_request.labels.*.name, 'image-test') || contains(github.event.pull_request.labels.*.name, 'e2e-test')  }}
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(github) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump steps context event
        env:
          STEPS_CONTEXT_EVENT: ${{ toJson(github.event) }}
        run: echo "$STEPS_CONTEXT_EVENT"
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.2
        with:
          route: ${{ github.event.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).head.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).head.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).head.repo.ssh_url }}"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{fromJson(steps.request.outputs.data).head.repo.full_name}}
          ref: ${{fromJson(steps.request.outputs.data).head.ref}}
          path: src/github.com/alibaba/sealer

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Install sealer and ginkgo
        shell: bash
        run: |
          source hack/build.sh
          export SEALER_DIR=$THIS_PLATFORM_BIN/sealer/linux_amd64
          echo "$SEALER_DIR" >> $GITHUB_PATH
          go get github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega/...
          GOPATH=`go env GOPATH`
          echo "$GOPATH/bin" >> $GITHUB_PATH
        working-directory: src/github.com/alibaba/sealer

      - name: Run sealer login test
        shell: bash
        working-directory: src/github.com/alibaba/sealer
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
        run: |
          ginkgo -v --focus="sealer login" test

      - name: Run sealer image test
        shell: bash
        working-directory: src/github.com/alibaba/sealer
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME}}
        run: |
          ginkgo -v --focus="sealer image" test